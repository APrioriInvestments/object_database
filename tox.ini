[tox]
requires =
    tox-venv
envlist = py36,py37


[testenv]
deps =
    pytest

commands =
    ./test.py --filter=typed_python


[pytest]
testpaths =
    object_database

python_files =
    *_test.py
    **/*/cells_demo/*.py

norecursedirs =
    object_database/web/content

log_level = INFO
log_format = [%(asctime)s.%(msecs)03d] %(levelname)8s %(filename)30s:%(lineno)4s | %(threadName)10s | %(message)s
log_date_format = %Y-%m-%d %H:%M:%S

# Uncomment to enable in-process logging not to be captured when -s is used
# log_cli = True


# The pycodestyle section is used by autopep8
[pycodestyle]
max-line-length = 95
ignore =
    E203,  # whitespace before ':' -- because of black
    E231,  # missing whitespace after ',', ';', or ':' -- because of black
    W503,  # line break before binary operator -- our preference
    E731,  # lambda function instead of def -- our preference

exclude =
    .git,
    .eggs,
    .venv,
    .tox,
    build,
    object_database.egg-info


[flake8]
statistics = True

max-line-length = 95

ignore =
    E203,  # whitespace before ':' -- because of black
    E231,  # missing whitespace after ',', ';', or ':' -- because of black
    W503,  # line break before binary operator -- our preference
    E731,  # lambda function instead of def -- our preference

per-file-ignores=
    __init__.py: F401,

exclude =
    .git,
    .eggs,
    .venv,
    .tox,
    .nodeenv,
    build,
    object_database.egg-info


[coverage:run]
source =
    object_database

parallel = True


[coverage:report]
omit =
    *_test.py

exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    pass
