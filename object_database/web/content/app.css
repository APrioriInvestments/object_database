/**
 * Application Wide Stylesheet for ActiveWebService
 **/

/* Global Styling Variables */
:root {
    --page-view-header-height: 75px;
}

/* Page Root  and other global-type elements*/
#page_root {
    height: 100vh;
}

.subscribed {
    width: 100%;
    height: 100%;
}

/* Clickable and Button
 * (Note that most of Button styling is from Bootstrap first)
 * =====================================================*/
[data-cell-type="Clickable"] {
    display: inline-block;
}

[data-cell-type="Clickable"]:hover {
    cursor: pointer;
}

/* Traceback
 * =====================================================*/

.traceback {
    white-space: pre;
}

/* SplitView
 * =====================================================*/
.split-view {
    width: 100%;
    height: 100%;
    display: flex;
    position: relative;
}

.split-view-column {
    flex-direction: column;
}

.split-view-row {
    flex-direction: row;
}

/* ResizablePanel and Friends
 * =====================================================*/
.resizable-panel {
    display: flex;
    width: 100%;
    height: 100%;
}

.resizable-panel.vertical-panel {
    flex-direction: column
}

.resizable-panel-item {
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    flex: 1 1 auto;
}

.resizable-panel-handle {
    padding: 0;
    flex: 0 0 auto;
}

.horizontal-panel > .resizable-panel-handle::before {
    height: 100%;
    width: 4px;
}

.vertical-panel > .resizable-panel-handle::before {
    width: 100%;
    height: 4px;
}

.resizable-panel-handle::before {
    content: "";
    display: block;
    margin: 0 auto;
    background: black;
}

.vertical-panel > .resizable-panel-handle {
    cursor: ns-resize;
    height: 20px;
}

.horizontal-panel > .resizable-panel-handle {
    cursor: ew-resize;
    width: 20px;
}

/* In the Split.js implementation, we can
 * style the created 'gutters' (resizers)
 */
.resizable-panel .gutter {
    background-color: transparent;
    transition: background-color 150ms linear;
}

.resizable-panel .gutter:hover {
    background-color: rgba(200, 200, 200, 0.5);
    transition background-color 150ms linear;
}

.vertical-panel > .gutter:hover {
    cursor: ns-resize;
}

.horizontal-panel > .gutter:hover {
    cursor: ew-resize;
}



/* Modals (bypasses Bootstrap implementation)
* =============================================================*/

.modal-cell {
    display: block;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.0);
    transition: background-color 0.1s linear;
    z-index: -1;
    opacity: 0.0;
}

.modal-cell-show {
    display: block;
    opacity: 1.0;
    background-color: rgba(50, 50, 50, 0.5);
    transition: background-color 0.2s linear;
    z-index: 1050;

/* PageView
 *================================================================*/
.page-view {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    width: 100%;
}

.page-view > main {
    flex-grow: 1
}

.page-view-header {

}

.page-view-footer {

}

/* Sequence and HorizontalSequence
 *================================================================*/
.sequence {
    display: inline-block;
    width: 100%;
}

.sequence-vertical {
    flex-direction: column;
    align-items: flex-start;
}

:not(.flex-parent) > .sequence.flex-parent,
:not(.flex-child) > .sequence.flex-parent {
    height: 100%;
}

.sequence-horizontal > .sequence {
    width: auto;
}

.sequence-vertical > * {
    display: block;
}

.sequence-horizontal {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    align-content: flex-start;
}

.sequence-horizontal.overflow {
    /* We handle this for each type of sequence
     * separately.
     */
    overflow-y: hidden;
    overflow-x: auto;
}



/* Flex Parent and Flex Child (Sequences etc)
 *================================================================*/
.seq-flex-wrap {
    flex-wrap: wrap;
}

.sequence-vertical.flex-parent {
    display: flex;
    flex-direction: column;
}

.sequence-horizontal.flex-parent {
    display: flex;
    flex-direction: row;
}

.sequence-vertical > .flex-child {
    overflow-y: auto;
    flex: 1;
}

.sequence-horizontal > .flex-child {
    overflow-x: auto;
    flex: 1;
}

.sequence-horizontal > .flex-child.seq-flex-wrap {
    flex-wrap: nowrap;
}

.shrinkwrapped {
    flex-grow: 0;
}

/* Sequence and HorizontalSequence Special Cases
 * ===============================================================*/
.sequence-vertical > [data-cell-type="Clickable"] {
    display: block;
}

:not(.sequence) > .sequence-horizontal {
    position: relative;
    height: 100%;
}

.sequence-vertical > .split-view {
    display: flex;
}

/* Panel
 * ============================================================== */
.cell-panel {
    display: block;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(75, 75, 75, 0.3);
    padding: 10px;
    border-radius: 10px;
}

.cell-panel.flex-child,
.flex-parent > .cell-panel {
    width: auto;
    height: auto;
}

.sequence-horizontal > .cell-panel {
    height: auto;
    width: auto;
}

.sequence-horizontal.flex-parent > .cell.panel {
    height: 100%;
    width: auto;
}

.sequence-vertical.flex-parent > .cell-panel {
    height: auto;
    width: 100%;
}

/* CodeEditor
 * ===============================================================*/
.code-editor {
    position: relative;
    width: 100%;
    height: 100%;
}

.code-editor-inner {
    width: 100%;
    min-height: 100%;
    margin: auto;
    border: 1px solid lightgray;
}

.sequence-horizontal:not(.flex-parent) > .code-editor {
    min-width: 300px;
    flex: 1;
}

.sequence-vertical > .code-editor.flex-child {
    width: 100%;
}

/* PageView
 *================================================================*/
.page-view {
    display: inline-flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
}

.page-view > header {
    height: var(--page-view-header-height);
}

.page-view > main {
    height: calc(100% - var(--page-view-header-height));
}

.page-view-header {

}

.page-view-footer {

}

/* CollapsiblePanel
 *======================================================*/
.collapsible-panel {
    display: flex;
    flex-direction: row;
    width: 100%;
    height: 100%;
}

.collapsible-panel-panel {
    flex: 1;
}

.collapsible-panel-content {
    flex: 5;
}

/* Bootstrap and related
 *======================================================*/
.card {
    width: 100%;
}

/* Generic and Utility Classes
 *======================================================*/
.overflow {
    overflow: auto;
}

.child-margin-1 > * {
    margin: .25rem!important;
}

.child-margin-2 > * {
    margin: .5rem!important;
}


.child-margin-3 > * {
    margin: 1rem!important;
}


.child-margin-4 > * {
    margin: 1.5rem!important;
}


.child-margin-5 > * {
    margin: 3rem!important;
}

.child-margin-5 > * {
    margin: 3rem!important;
}

.custom-tooltip .tooltiptext{
    visibility: hidden;
    width: 120px;
    background-color: lightgray;
    color: white;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;

    /* Position the tooltip */
    position: absolute;
    z-index: 1;
}

.custom-tooltip:hover .tooltiptext{
    visibility: visible;
}
